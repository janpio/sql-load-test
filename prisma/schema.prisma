datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:prisma@localhost:5432/postgres?schema=sql_load_test"
}

generator client {
  provider = "prisma-client-js"
}

model Comment {
  author    Int
  content   String?
  createdAt DateTime @default(dbgenerated())
  id        Int      @id
  post      Int
  updatedAt DateTime @default(dbgenerated())
  User      User     @relation(fields: [author], references: [id])
  Post      Post     @relation(fields: [post], references: [id])
  Like      Like[]

  @@index([author], name: "Comment.author")
  @@index([post], name: "Comment.post")
}

model Like {
  comment   Int
  createdAt DateTime @default(dbgenerated())
  id        Int      @id
  post      Int
  updatedAt DateTime @default(dbgenerated())
  user      Int
  Comment   Comment  @relation(fields: [comment], references: [id])
  Post      Post     @relation(fields: [post], references: [id])
  User      User     @relation(fields: [user], references: [id])

  @@index([comment], name: "Like.comment")
  @@index([post], name: "Like.post")
  @@index([user], name: "Like.user")
}

model Post {
  author    Int
  content   String?
  createdAt DateTime  @default(dbgenerated())
  id        Int       @id
  updatedAt DateTime  @default(dbgenerated())
  User      User      @relation(fields: [author], references: [id])
  Comment   Comment[]
  Like      Like[]

  @@index([author], name: "Post.author")
}

model User {
  age         Int?
  createdAt   DateTime  @default(dbgenerated())
  email       String?
  firstName   String    @default("")
  id          Int       @id
  lastName    String    @default("")
  password    String?
  updatedAt   DateTime  @default(dbgenerated())
  Comment     Comment[]
  Like        Like[]
  Post        Post[]
  FriendsWith User[]    @relation("FriendShip", references: [id])
  FriendOf    User[]    @relation("FriendShip", references: [id])
}
